unit uTest;

interface
uses
  Classes, SysUtils, DUnitX.TestFramework, MiniREST.SQL.Intf, Data.DBXFirebird;

type

  [TestFixture]
  TMiniRESTORMTest = class(TObject)
  private
    FConnectionFactory: IMiniRESTSQLConnectionFactory;
    procedure CreateConnection;
  public
    [SetupFixture]
    procedure Setup;
    [TearDown]
    procedure TearDown;
    [Test]
    procedure TesteVerifyStructure;
    [Test]
    procedure TesteInsert;
    [Test]
    procedure TestePrimaryKey;
    [Test]
    procedure TesteMerge;
    [Test]
    procedure TesteGet;
    [Test]
    procedure TesteDelete;
    [Test]
    procedure TesteAddColumn;
    [Test]
    procedure TesteInsert2;
    [Test]
    procedure TesteGet2;
    [Test]
    procedure TesteMerge2;
    [Test]
    procedure TesteInsertManyToMany;
    [Test]
    procedure TesteGetManyToMany;
    [Test]
    procedure TesteMergeManyToMany;
  end;

implementation

uses MiniREST.SQL.DBX;

procedure TMiniRESTORMTest.Setup;
begin
   CreateConnection;
  (*DropTable('PESSOA_DOCUMENTOS');
  DropTable('DOCUMENTO');
  DropTable('ITEM');
  DropTable('MOVIMENTO');
  DropTable('PRODUTO');
  DropTable('PESSOA');
  DropTable('FILIAL');
  DropTable('EMPRESA');
  RegisterModels; *)
end;

procedure TMiniRESTORMTest.TearDown;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteAddColumn;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteDelete;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteGet;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteGet2;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteGetManyToMany;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteInsert;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteInsert2;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteInsertManyToMany;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteMerge;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteMerge2;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteMergeManyToMany;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TestePrimaryKey;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.TesteVerifyStructure;
begin
  raise Exception.Create('Not implemented');
end;

procedure TMiniRESTORMTest.CreateConnection;
var
  LConnectionInfo: TStringList;
begin
  LConnectionInfo := TStringList.Create;
  try
    LConnectionInfo.LoadFromFile('..\..\dbxcon.txt');
    FConnectionFactory := TMiniRESTSQLConnectionFactoryDBX.Create(
      TMiniRESTSQLConnectionParamsDBX.New
      .SetConnectionsCount(5)
      .SetConnectionString(LConnectionInfo.Text)
      .SetDriverName('Firebird')
    );    
  finally
    LConnectionInfo.Free;
  end;  
end;

initialization
  TDUnitX.RegisterTestFixture(TMiniRESTORMTest);
end.
